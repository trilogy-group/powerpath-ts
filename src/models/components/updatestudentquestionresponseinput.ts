/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The student's response to the question. Might be the reference to the choice specified in the QTI structure.
 */
export type UpdateStudentQuestionResponseInputResponse = string | Array<string>;

/**
 * The input for the updateStudentQuestionResponse endpoint
 */
export type UpdateStudentQuestionResponseInput = {
  /**
   * The sourcedId of the student who is answering the question
   */
  student: string;
  /**
   * The sourcedId of the ComponentResource that represents the question within the course
   */
  question: string;
  /**
   * The student's response to the question. Might be the reference to the choice specified in the QTI structure.
   */
  response: string | Array<string>;
  /**
   * The sourcedId of the lesson (ComponentResource)
   */
  lesson: string;
};

/** @internal */
export const UpdateStudentQuestionResponseInputResponse$inboundSchema:
  z.ZodType<UpdateStudentQuestionResponseInputResponse, z.ZodTypeDef, unknown> =
    z.union([z.string(), z.array(z.string())]);

/** @internal */
export type UpdateStudentQuestionResponseInputResponse$Outbound =
  | string
  | Array<string>;

/** @internal */
export const UpdateStudentQuestionResponseInputResponse$outboundSchema:
  z.ZodType<
    UpdateStudentQuestionResponseInputResponse$Outbound,
    z.ZodTypeDef,
    UpdateStudentQuestionResponseInputResponse
  > = z.union([z.string(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStudentQuestionResponseInputResponse$ {
  /** @deprecated use `UpdateStudentQuestionResponseInputResponse$inboundSchema` instead. */
  export const inboundSchema =
    UpdateStudentQuestionResponseInputResponse$inboundSchema;
  /** @deprecated use `UpdateStudentQuestionResponseInputResponse$outboundSchema` instead. */
  export const outboundSchema =
    UpdateStudentQuestionResponseInputResponse$outboundSchema;
  /** @deprecated use `UpdateStudentQuestionResponseInputResponse$Outbound` instead. */
  export type Outbound = UpdateStudentQuestionResponseInputResponse$Outbound;
}

export function updateStudentQuestionResponseInputResponseToJSON(
  updateStudentQuestionResponseInputResponse:
    UpdateStudentQuestionResponseInputResponse,
): string {
  return JSON.stringify(
    UpdateStudentQuestionResponseInputResponse$outboundSchema.parse(
      updateStudentQuestionResponseInputResponse,
    ),
  );
}

export function updateStudentQuestionResponseInputResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateStudentQuestionResponseInputResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateStudentQuestionResponseInputResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateStudentQuestionResponseInputResponse' from JSON`,
  );
}

/** @internal */
export const UpdateStudentQuestionResponseInput$inboundSchema: z.ZodType<
  UpdateStudentQuestionResponseInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  student: z.string(),
  question: z.string(),
  response: z.union([z.string(), z.array(z.string())]),
  lesson: z.string(),
});

/** @internal */
export type UpdateStudentQuestionResponseInput$Outbound = {
  student: string;
  question: string;
  response: string | Array<string>;
  lesson: string;
};

/** @internal */
export const UpdateStudentQuestionResponseInput$outboundSchema: z.ZodType<
  UpdateStudentQuestionResponseInput$Outbound,
  z.ZodTypeDef,
  UpdateStudentQuestionResponseInput
> = z.object({
  student: z.string(),
  question: z.string(),
  response: z.union([z.string(), z.array(z.string())]),
  lesson: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateStudentQuestionResponseInput$ {
  /** @deprecated use `UpdateStudentQuestionResponseInput$inboundSchema` instead. */
  export const inboundSchema = UpdateStudentQuestionResponseInput$inboundSchema;
  /** @deprecated use `UpdateStudentQuestionResponseInput$outboundSchema` instead. */
  export const outboundSchema =
    UpdateStudentQuestionResponseInput$outboundSchema;
  /** @deprecated use `UpdateStudentQuestionResponseInput$Outbound` instead. */
  export type Outbound = UpdateStudentQuestionResponseInput$Outbound;
}

export function updateStudentQuestionResponseInputToJSON(
  updateStudentQuestionResponseInput: UpdateStudentQuestionResponseInput,
): string {
  return JSON.stringify(
    UpdateStudentQuestionResponseInput$outboundSchema.parse(
      updateStudentQuestionResponseInput,
    ),
  );
}

export function updateStudentQuestionResponseInputFromJSON(
  jsonString: string,
): SafeParseResult<UpdateStudentQuestionResponseInput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateStudentQuestionResponseInput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateStudentQuestionResponseInput' from JSON`,
  );
}
