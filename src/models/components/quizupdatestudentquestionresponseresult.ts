/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Represents the result of updating the student's response to the question in the PowerPath Quiz lesson
 */
export type QuizUpdateStudentQuestionResponseResult = {
  /**
   * The assessment result object for the question (for debugging)
   */
  questionResult?: any | undefined;
  lessonType?: "quiz" | undefined;
};

/** @internal */
export const QuizUpdateStudentQuestionResponseResult$inboundSchema: z.ZodType<
  QuizUpdateStudentQuestionResponseResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  questionResult: z.any().optional(),
  lessonType: z.literal("quiz").default("quiz").optional(),
});

/** @internal */
export type QuizUpdateStudentQuestionResponseResult$Outbound = {
  questionResult?: any | undefined;
  lessonType: "quiz";
};

/** @internal */
export const QuizUpdateStudentQuestionResponseResult$outboundSchema: z.ZodType<
  QuizUpdateStudentQuestionResponseResult$Outbound,
  z.ZodTypeDef,
  QuizUpdateStudentQuestionResponseResult
> = z.object({
  questionResult: z.any().optional(),
  lessonType: z.literal("quiz").default("quiz" as const),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QuizUpdateStudentQuestionResponseResult$ {
  /** @deprecated use `QuizUpdateStudentQuestionResponseResult$inboundSchema` instead. */
  export const inboundSchema =
    QuizUpdateStudentQuestionResponseResult$inboundSchema;
  /** @deprecated use `QuizUpdateStudentQuestionResponseResult$outboundSchema` instead. */
  export const outboundSchema =
    QuizUpdateStudentQuestionResponseResult$outboundSchema;
  /** @deprecated use `QuizUpdateStudentQuestionResponseResult$Outbound` instead. */
  export type Outbound = QuizUpdateStudentQuestionResponseResult$Outbound;
}

export function quizUpdateStudentQuestionResponseResultToJSON(
  quizUpdateStudentQuestionResponseResult:
    QuizUpdateStudentQuestionResponseResult,
): string {
  return JSON.stringify(
    QuizUpdateStudentQuestionResponseResult$outboundSchema.parse(
      quizUpdateStudentQuestionResponseResult,
    ),
  );
}

export function quizUpdateStudentQuestionResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<
  QuizUpdateStudentQuestionResponseResult,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      QuizUpdateStudentQuestionResponseResult$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'QuizUpdateStudentQuestionResponseResult' from JSON`,
  );
}
