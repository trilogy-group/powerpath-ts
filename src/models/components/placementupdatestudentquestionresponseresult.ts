/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Represents the result of updating the student's response to the question in the PowerPath Placement test
 */
export type PlacementUpdateStudentQuestionResponseResult = {
  /**
   * The assessment result object for the question (for debugging)
   */
  questionResult?: any | undefined;
  lessonType?: "placement" | undefined;
};

/** @internal */
export const PlacementUpdateStudentQuestionResponseResult$inboundSchema:
  z.ZodType<
    PlacementUpdateStudentQuestionResponseResult,
    z.ZodTypeDef,
    unknown
  > = z.object({
    questionResult: z.any().optional(),
    lessonType: z.literal("placement").default("placement").optional(),
  });

/** @internal */
export type PlacementUpdateStudentQuestionResponseResult$Outbound = {
  questionResult?: any | undefined;
  lessonType: "placement";
};

/** @internal */
export const PlacementUpdateStudentQuestionResponseResult$outboundSchema:
  z.ZodType<
    PlacementUpdateStudentQuestionResponseResult$Outbound,
    z.ZodTypeDef,
    PlacementUpdateStudentQuestionResponseResult
  > = z.object({
    questionResult: z.any().optional(),
    lessonType: z.literal("placement").default("placement" as const),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlacementUpdateStudentQuestionResponseResult$ {
  /** @deprecated use `PlacementUpdateStudentQuestionResponseResult$inboundSchema` instead. */
  export const inboundSchema =
    PlacementUpdateStudentQuestionResponseResult$inboundSchema;
  /** @deprecated use `PlacementUpdateStudentQuestionResponseResult$outboundSchema` instead. */
  export const outboundSchema =
    PlacementUpdateStudentQuestionResponseResult$outboundSchema;
  /** @deprecated use `PlacementUpdateStudentQuestionResponseResult$Outbound` instead. */
  export type Outbound = PlacementUpdateStudentQuestionResponseResult$Outbound;
}

export function placementUpdateStudentQuestionResponseResultToJSON(
  placementUpdateStudentQuestionResponseResult:
    PlacementUpdateStudentQuestionResponseResult,
): string {
  return JSON.stringify(
    PlacementUpdateStudentQuestionResponseResult$outboundSchema.parse(
      placementUpdateStudentQuestionResponseResult,
    ),
  );
}

export function placementUpdateStudentQuestionResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<
  PlacementUpdateStudentQuestionResponseResult,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PlacementUpdateStudentQuestionResponseResult$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PlacementUpdateStudentQuestionResponseResult' from JSON`,
  );
}
