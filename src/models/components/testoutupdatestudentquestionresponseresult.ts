/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Represents the result of updating the student's response to the question in the PowerPath Test Out lesson
 */
export type TestOutUpdateStudentQuestionResponseResult = {
  /**
   * The assessment result object for the question (for debugging)
   */
  questionResult?: any | undefined;
  lessonType?: "test-out" | undefined;
};

/** @internal */
export const TestOutUpdateStudentQuestionResponseResult$inboundSchema:
  z.ZodType<TestOutUpdateStudentQuestionResponseResult, z.ZodTypeDef, unknown> =
    z.object({
      questionResult: z.any().optional(),
      lessonType: z.literal("test-out").default("test-out").optional(),
    });

/** @internal */
export type TestOutUpdateStudentQuestionResponseResult$Outbound = {
  questionResult?: any | undefined;
  lessonType: "test-out";
};

/** @internal */
export const TestOutUpdateStudentQuestionResponseResult$outboundSchema:
  z.ZodType<
    TestOutUpdateStudentQuestionResponseResult$Outbound,
    z.ZodTypeDef,
    TestOutUpdateStudentQuestionResponseResult
  > = z.object({
    questionResult: z.any().optional(),
    lessonType: z.literal("test-out").default("test-out" as const),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TestOutUpdateStudentQuestionResponseResult$ {
  /** @deprecated use `TestOutUpdateStudentQuestionResponseResult$inboundSchema` instead. */
  export const inboundSchema =
    TestOutUpdateStudentQuestionResponseResult$inboundSchema;
  /** @deprecated use `TestOutUpdateStudentQuestionResponseResult$outboundSchema` instead. */
  export const outboundSchema =
    TestOutUpdateStudentQuestionResponseResult$outboundSchema;
  /** @deprecated use `TestOutUpdateStudentQuestionResponseResult$Outbound` instead. */
  export type Outbound = TestOutUpdateStudentQuestionResponseResult$Outbound;
}

export function testOutUpdateStudentQuestionResponseResultToJSON(
  testOutUpdateStudentQuestionResponseResult:
    TestOutUpdateStudentQuestionResponseResult,
): string {
  return JSON.stringify(
    TestOutUpdateStudentQuestionResponseResult$outboundSchema.parse(
      testOutUpdateStudentQuestionResponseResult,
    ),
  );
}

export function testOutUpdateStudentQuestionResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<
  TestOutUpdateStudentQuestionResponseResult,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      TestOutUpdateStudentQuestionResponseResult$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'TestOutUpdateStudentQuestionResponseResult' from JSON`,
  );
}
