/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateNewAttemptRequest = {
  /**
   * The sourcedId of the student
   */
  student: string;
  /**
   * The sourcedId of the lesson (ComponentResource)
   */
  lesson: string;
};

/**
 * The status of this attempt
 */
export const CreateNewAttemptScoreStatus = {
  Exempt: "exempt",
  FullyGraded: "fully graded",
  NotSubmitted: "not submitted",
  PartiallyGraded: "partially graded",
  Submitted: "submitted",
} as const;
/**
 * The status of this attempt
 */
export type CreateNewAttemptScoreStatus = ClosedEnum<
  typeof CreateNewAttemptScoreStatus
>;

export type CreateNewAttemptAttempt = {
  /**
   * The attempt number
   */
  attempt: number | null;
  /**
   * The current score for this attempt
   */
  score: number;
  /**
   * The status of this attempt
   */
  scoreStatus: CreateNewAttemptScoreStatus;
  /**
   * When this attempt was started
   */
  startedAt: Date | null;
  /**
   * When this attempt was completed
   */
  completedAt: Date | null;
};

/**
 * Success
 */
export type CreateNewAttemptResponse = {
  attempt: CreateNewAttemptAttempt;
};

/** @internal */
export const CreateNewAttemptRequest$inboundSchema: z.ZodType<
  CreateNewAttemptRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  student: z.string(),
  lesson: z.string(),
});

/** @internal */
export type CreateNewAttemptRequest$Outbound = {
  student: string;
  lesson: string;
};

/** @internal */
export const CreateNewAttemptRequest$outboundSchema: z.ZodType<
  CreateNewAttemptRequest$Outbound,
  z.ZodTypeDef,
  CreateNewAttemptRequest
> = z.object({
  student: z.string(),
  lesson: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNewAttemptRequest$ {
  /** @deprecated use `CreateNewAttemptRequest$inboundSchema` instead. */
  export const inboundSchema = CreateNewAttemptRequest$inboundSchema;
  /** @deprecated use `CreateNewAttemptRequest$outboundSchema` instead. */
  export const outboundSchema = CreateNewAttemptRequest$outboundSchema;
  /** @deprecated use `CreateNewAttemptRequest$Outbound` instead. */
  export type Outbound = CreateNewAttemptRequest$Outbound;
}

export function createNewAttemptRequestToJSON(
  createNewAttemptRequest: CreateNewAttemptRequest,
): string {
  return JSON.stringify(
    CreateNewAttemptRequest$outboundSchema.parse(createNewAttemptRequest),
  );
}

export function createNewAttemptRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateNewAttemptRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateNewAttemptRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateNewAttemptRequest' from JSON`,
  );
}

/** @internal */
export const CreateNewAttemptScoreStatus$inboundSchema: z.ZodNativeEnum<
  typeof CreateNewAttemptScoreStatus
> = z.nativeEnum(CreateNewAttemptScoreStatus);

/** @internal */
export const CreateNewAttemptScoreStatus$outboundSchema: z.ZodNativeEnum<
  typeof CreateNewAttemptScoreStatus
> = CreateNewAttemptScoreStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNewAttemptScoreStatus$ {
  /** @deprecated use `CreateNewAttemptScoreStatus$inboundSchema` instead. */
  export const inboundSchema = CreateNewAttemptScoreStatus$inboundSchema;
  /** @deprecated use `CreateNewAttemptScoreStatus$outboundSchema` instead. */
  export const outboundSchema = CreateNewAttemptScoreStatus$outboundSchema;
}

/** @internal */
export const CreateNewAttemptAttempt$inboundSchema: z.ZodType<
  CreateNewAttemptAttempt,
  z.ZodTypeDef,
  unknown
> = z.object({
  attempt: z.nullable(z.number()),
  score: z.number(),
  scoreStatus: CreateNewAttemptScoreStatus$inboundSchema,
  startedAt: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  completedAt: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
});

/** @internal */
export type CreateNewAttemptAttempt$Outbound = {
  attempt: number | null;
  score: number;
  scoreStatus: string;
  startedAt: string | null;
  completedAt: string | null;
};

/** @internal */
export const CreateNewAttemptAttempt$outboundSchema: z.ZodType<
  CreateNewAttemptAttempt$Outbound,
  z.ZodTypeDef,
  CreateNewAttemptAttempt
> = z.object({
  attempt: z.nullable(z.number()),
  score: z.number(),
  scoreStatus: CreateNewAttemptScoreStatus$outboundSchema,
  startedAt: z.nullable(z.date().transform(v => v.toISOString())),
  completedAt: z.nullable(z.date().transform(v => v.toISOString())),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNewAttemptAttempt$ {
  /** @deprecated use `CreateNewAttemptAttempt$inboundSchema` instead. */
  export const inboundSchema = CreateNewAttemptAttempt$inboundSchema;
  /** @deprecated use `CreateNewAttemptAttempt$outboundSchema` instead. */
  export const outboundSchema = CreateNewAttemptAttempt$outboundSchema;
  /** @deprecated use `CreateNewAttemptAttempt$Outbound` instead. */
  export type Outbound = CreateNewAttemptAttempt$Outbound;
}

export function createNewAttemptAttemptToJSON(
  createNewAttemptAttempt: CreateNewAttemptAttempt,
): string {
  return JSON.stringify(
    CreateNewAttemptAttempt$outboundSchema.parse(createNewAttemptAttempt),
  );
}

export function createNewAttemptAttemptFromJSON(
  jsonString: string,
): SafeParseResult<CreateNewAttemptAttempt, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateNewAttemptAttempt$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateNewAttemptAttempt' from JSON`,
  );
}

/** @internal */
export const CreateNewAttemptResponse$inboundSchema: z.ZodType<
  CreateNewAttemptResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  attempt: z.lazy(() => CreateNewAttemptAttempt$inboundSchema),
});

/** @internal */
export type CreateNewAttemptResponse$Outbound = {
  attempt: CreateNewAttemptAttempt$Outbound;
};

/** @internal */
export const CreateNewAttemptResponse$outboundSchema: z.ZodType<
  CreateNewAttemptResponse$Outbound,
  z.ZodTypeDef,
  CreateNewAttemptResponse
> = z.object({
  attempt: z.lazy(() => CreateNewAttemptAttempt$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateNewAttemptResponse$ {
  /** @deprecated use `CreateNewAttemptResponse$inboundSchema` instead. */
  export const inboundSchema = CreateNewAttemptResponse$inboundSchema;
  /** @deprecated use `CreateNewAttemptResponse$outboundSchema` instead. */
  export const outboundSchema = CreateNewAttemptResponse$outboundSchema;
  /** @deprecated use `CreateNewAttemptResponse$Outbound` instead. */
  export type Outbound = CreateNewAttemptResponse$Outbound;
}

export function createNewAttemptResponseToJSON(
  createNewAttemptResponse: CreateNewAttemptResponse,
): string {
  return JSON.stringify(
    CreateNewAttemptResponse$outboundSchema.parse(createNewAttemptResponse),
  );
}

export function createNewAttemptResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateNewAttemptResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateNewAttemptResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateNewAttemptResponse' from JSON`,
  );
}
