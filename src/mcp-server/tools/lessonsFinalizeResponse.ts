/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { lessonsFinalizeResponse } from "../../funcs/lessonsFinalizeResponse.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.FinalStudentAssessmentResponseRequest$inboundSchema
    .optional(),
};

export const tool$lessonsFinalizeResponse: ToolDefinition<typeof args> = {
  name: "lessons-finalize-response",
  description: `Finalize a quiz assessment

Finalize a lesson/assessment of 'quiz' type after all questions have been answered.

Evaluates answered questions, attribute scores for each question, and overall lesson score.

PowerPath will check the correctness of the response using the QTI question \`<qti-response-declaration>\` element and update the score accordingly.

PowerPath will create/update the required AssessmentLineItem and AssessmentResult objects for the student/question pair if it doesn't exist yet.

Returns the final assessment result for the student.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await lessonsFinalizeResponse(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
