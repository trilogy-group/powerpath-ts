openapi: 3.1.0
info:
  title: PowerPath API
  version: 1.0.0
  description: >
    TimeBack PowerPath 100 API


    # Authentication


    All endpoints require authentication using the `Authorization: Bearer
    <token>` header.


    The token can be obtained with:


    ```

    curl -X POST
    https://alpha-auth-production-idp.auth.us-west-2.amazoncognito.com/oauth2/token
    \

    -H "Content-Type: application/x-www-form-urlencoded" \

    -d
    "grant_type=client_credentials&client_id=<your-client-id>&client_secret=<your-client-secret>"

    ```


    Use the correct IDP server depending on the environment you're using:


    - Production Server:
      https://alpha-auth-production-idp.auth.us-west-2.amazoncognito.com
    - Staging Server:
      https://alpha-auth-development-idp.auth.us-west-2.amazoncognito.com

    Reach out to the platform team to get a client/secret pair for your
    application.


    # Pagination


    Our API uses offset pagination for list endpoints. Paginated responses
    include the following fields:


    - `offset`: Offset for the next page of results

    - `limit`: Number of items per page (default: 100)


    Example request:


    ```

    GET /ims/oneroster/rostering/v1p2/users?offset=20&limit=20

    ```


    All listing endpoints support offset pagination.


    # Filtering


    All listing endpoints support filtering using the `filter` query parameter,
    following 1EdTech's filtering specification.


    The filter should be a string with the following format:


    ```

    ?filter=[field][operator][value]

    ```


    Example request:


    ```

    GET /ims/oneroster/rostering/v1p2/users?filter=status='active'

    ```


    Example request with multiple filters:


    ```

    GET /ims/oneroster/rostering/v1p2/users?filter=status='active' AND
    name='John'

    ```


    **Filtering by nested relations is not supported**.


    # Sorting


    All listing endpoints support sorting using the `sort` and `orderBy` query
    parameters, following 1EdTech's sorting specification


    Example request:


    ```

    GET /ims/oneroster/rostering/v1p2/users?sort=lastName&orderBy=asc

    ```
servers:
  - url: https://staging.alpha-1edtech.com/
    description: PowerPath API
tags:
  - name: PowerPath - Lesson Mastery
    description: >-
      Track and manage student mastery of lesson objectives, through PowerPath
      100 lessons
  - name: PowerPath - Lesson Plans
    description: Manage lesson plans and instructional content
security:
  - OAuth2: []
paths:
  /powerpath/lessonPlans/getCourseProgress/{courseId}/student/{studentId}:
    get:
      operationId: getCourseProgress
      summary: Get course progress
      description: >-

        Get the course progress for a student in a course.


        ---


        Returns a list of **assessment line items** for the **course** and
        **student**.


        A type "**component**" indicates a component of the lesson plan such as
        a unit or lesson.


        A type "**resource**" indicates a resource such as a video, audio,

        or document file as well as a quiz or question.


        Each **line item** contains a list of assessment results in the
        **results** attribute, related to student and course.

      tags:
        - PowerPath - Lesson Plans
      parameters:
        - name: courseId
          description: Course ID
          in: path
          required: true
          schema:
            type: string
        - name: studentId
          description: Student ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course progress
          content:
            application/json:
              schema:
                type: object
                properties:
                  lineItems:
                    type: array
                    items:
                      oneOf:
                        - type: object
                          properties:
                            type:
                              type: string
                              const: component
                            assessmentLineItemSourcedId:
                              type: string
                            courseComponentSourcedId:
                              type: string
                            title:
                              type: string
                            results:
                              type: array
                              items:
                                type: object
                                properties:
                                  sourcedId:
                                    type: string
                                  status:
                                    type: string
                                    enum: &ref_0
                                      - active
                                      - tobedeleted
                                  dateLastModified:
                                    type: string
                                    format: date-time
                                  metadata:
                                    type:
                                      - object
                                      - 'null'
                                    additionalProperties: {}
                                  score:
                                    type:
                                      - number
                                      - 'null'
                                  textScore:
                                    type:
                                      - string
                                      - 'null'
                                  scoreDate:
                                    type: string
                                    format: date-time
                                  scoreScale:
                                    type:
                                      - object
                                      - 'null'
                                    properties:
                                      sourcedId:
                                        type: string
                                    required:
                                      - sourcedId
                                  scorePercentile:
                                    type:
                                      - number
                                      - 'null'
                                  scoreStatus:
                                    type: string
                                    enum: &ref_1
                                      - exempt
                                      - fully graded
                                      - not submitted
                                      - partially graded
                                      - submitted
                                  comment:
                                    type:
                                      - string
                                      - 'null'
                                  learningObjectiveSet:
                                    type:
                                      - array
                                      - 'null'
                                    items:
                                      type: object
                                      properties:
                                        source:
                                          type: string
                                        learningObjectiveIds:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              learningObjectiveId:
                                                type: string
                                              score:
                                                type: number
                                              textScore:
                                                type: string
                                            required:
                                              - learningObjectiveId
                                      required:
                                        - source
                                        - learningObjectiveIds
                                  inProgress:
                                    type:
                                      - string
                                      - 'null'
                                  incomplete:
                                    type:
                                      - string
                                      - 'null'
                                  late:
                                    type:
                                      - string
                                      - 'null'
                                  missing:
                                    type:
                                      - string
                                      - 'null'
                                required:
                                  - status
                                  - scoreDate
                                  - scoreStatus
                                description: Represents an assessment result.
                              description: Assessment results for the component and student
                          required:
                            - type
                            - assessmentLineItemSourcedId
                            - courseComponentSourcedId
                            - title
                            - results
                        - type: object
                          properties:
                            type:
                              type: string
                              const: resource
                            assessmentLineItemSourcedId:
                              type: string
                            courseComponentResourceSourcedId:
                              type: string
                            title:
                              type: string
                            results:
                              type: array
                              items:
                                type: object
                                properties:
                                  sourcedId:
                                    type: string
                                  status:
                                    type: string
                                    enum: *ref_0
                                  dateLastModified:
                                    type: string
                                    format: date-time
                                  metadata:
                                    type:
                                      - object
                                      - 'null'
                                    additionalProperties: {}
                                  score:
                                    type:
                                      - number
                                      - 'null'
                                  textScore:
                                    type:
                                      - string
                                      - 'null'
                                  scoreDate:
                                    type: string
                                    format: date-time
                                  scoreScale:
                                    type:
                                      - object
                                      - 'null'
                                    properties:
                                      sourcedId:
                                        type: string
                                    required:
                                      - sourcedId
                                  scorePercentile:
                                    type:
                                      - number
                                      - 'null'
                                  scoreStatus:
                                    type: string
                                    enum: *ref_1
                                  comment:
                                    type:
                                      - string
                                      - 'null'
                                  learningObjectiveSet:
                                    type:
                                      - array
                                      - 'null'
                                    items:
                                      type: object
                                      properties:
                                        source:
                                          type: string
                                        learningObjectiveIds:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              learningObjectiveId:
                                                type: string
                                              score:
                                                type: number
                                              textScore:
                                                type: string
                                            required:
                                              - learningObjectiveId
                                      required:
                                        - source
                                        - learningObjectiveIds
                                  inProgress:
                                    type:
                                      - string
                                      - 'null'
                                  incomplete:
                                    type:
                                      - string
                                      - 'null'
                                  late:
                                    type:
                                      - string
                                      - 'null'
                                  missing:
                                    type:
                                      - string
                                      - 'null'
                                required:
                                  - status
                                  - scoreDate
                                  - scoreStatus
                                description: Represents an assessment result.
                              description: Assessment results for the resource and student
                          required:
                            - type
                            - assessmentLineItemSourcedId
                            - courseComponentResourceSourcedId
                            - title
                            - results
                    description: Assessment line items for the course and student
                required:
                  - lineItems
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /powerpath/lessonPlans/updateStudentItemResponse:
    post:
      operationId: updateStudentItemResponse
      summary: Update student item response
      description: >-

        Update the student item response for a student in a course.


        ---


        The item may be a **component** or **componentResource**.


        You should provide either the **componentId** or the
        **componentResourceId**.


        If you provide the **componentId**, the data in the response payload
        should be in relation to the student's response to the entire component.


        If you provide the **componentResourceId**, the data in the response
        payload should be in relation to the student's response to the specific
        resource.

      tags:
        - PowerPath - Lesson Plans
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                studentId:
                  type: string
                  minLength: 1
                componentId:
                  type: string
                  minLength: 1
                componentResourceId:
                  type: string
                  minLength: 1
                result:
                  type: object
                  properties:
                    status:
                      type: string
                      enum: *ref_0
                    metadata:
                      type:
                        - object
                        - 'null'
                      additionalProperties: {}
                    score:
                      type:
                        - number
                        - 'null'
                    textScore:
                      type:
                        - string
                        - 'null'
                    scoreDate:
                      type: string
                      format: date-time
                    scorePercentile:
                      type:
                        - number
                        - 'null'
                    scoreStatus:
                      type: string
                      enum: *ref_1
                    comment:
                      type:
                        - string
                        - 'null'
                    learningObjectiveSet:
                      type:
                        - array
                        - 'null'
                      items:
                        type: object
                        properties:
                          source:
                            type: string
                          learningObjectiveIds:
                            type: array
                            items:
                              type: object
                              properties:
                                learningObjectiveId:
                                  type: string
                                score:
                                  type: number
                                textScore:
                                  type: string
                              required:
                                - learningObjectiveId
                        required:
                          - source
                          - learningObjectiveIds
                    inProgress:
                      type:
                        - string
                        - 'null'
                    incomplete:
                      type:
                        - string
                        - 'null'
                    late:
                      type:
                        - string
                        - 'null'
                    missing:
                      type:
                        - string
                        - 'null'
                  required:
                    - status
                    - scoreDate
                    - scoreStatus
                  description: >-
                    The student's result for the item, either a component or a
                    componentResource
              required:
                - studentId
                - result
      responses:
        '201':
          description: Student item response updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  componentLineItem:
                    $ref: '#/components/schemas/AssessmentLineItem'
                  componentResult:
                    $ref: '#/components/schemas/AssessmentResult'
                  componentResourceLineItem:
                    $ref: '#/components/schemas/AssessmentLineItem'
                  componentResourceResult:
                    $ref: '#/components/schemas/AssessmentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /powerpath/syllabus/{courseSourcedId}:
    get:
      operationId: getCourseSyllabus
      summary: Get course syllabus
      description: Get course syllabus
      tags:
        - PowerPath - Lesson Plans
      parameters:
        - name: courseSourcedId
          description: The course sourcedId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  syllabus:
                    description: The course syllabus content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /powerpath/createNewAttempt:
    post:
      operationId: createNewAttempt
      summary: Create new attempt
      description: >-
        Creates a new attempt for a student in a lesson if current attempt is
        completed
      tags:
        - PowerPath - Lesson Mastery
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                student:
                  type: string
                  description: The sourcedId of the student
                lesson:
                  type: string
                  description: The sourcedId of the lesson
              required:
                - student
                - lesson
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  attempt:
                    type:
                      - number
                      - 'null'
                    description: The attempt number
                  score:
                    type: number
                    description: The current score for this attempt
                  scoreStatus:
                    type: string
                    enum: &ref_2
                      - exempt
                      - fully graded
                      - not submitted
                      - partially graded
                      - submitted
                    description: The status of this attempt
                  startedAt:
                    type:
                      - string
                      - 'null'
                    format: date-time
                    description: When this attempt was started
                  completedAt:
                    type:
                      - string
                      - 'null'
                    format: date-time
                    description: When this attempt was completed
                required:
                  - attempt
                  - score
                  - scoreStatus
                  - startedAt
                  - completedAt
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /powerpath/finalStudentAssessmentResponse:
    post:
      operationId: finalStudentAssessmentResponse
      summary: Finalize a quiz assessment
      description: >

        Finalize a lesson/assessment of 'quiz' type after all questions have
        been answered.


        Evaluates answered questions, attribute scores for each question, and
        overall lesson score.


        PowerPath will check the correctness of the response using the QTI
        question `<qti-response-declaration>` element and update the score
        accordingly.


        PowerPath will create/update the required AssessmentLineItem and
        AssessmentResult objects for the student/question pair if it doesn't
        exist yet.


        Returns the final assessment result for the student.
      tags:
        - PowerPath - Lesson Mastery
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                student:
                  type: string
                  description: The sourcedId of the student
                lesson:
                  type: string
                  description: The sourcedId of the lesson
              required:
                - student
                - lesson
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  lessonType:
                    type: string
                    const: quiz
                  finalized:
                    type: boolean
                    description: >-
                      Whether the lesson has been finalized in the current
                      attempt
                  questions:
                    type: array
                    items:
                      $ref: '#/components/schemas/PowerPathTestQuestion'
                  score:
                    type: number
                    description: The final score for the student
                  accuracy:
                    type: number
                    description: The accuracy of the student's attempted questions
                  correctQuestions:
                    type: number
                    description: >-
                      The number of correct questions the student has answered
                      in the lesson
                  totalQuestions:
                    type: number
                    description: The total number of questions in the lesson
                  xp:
                    type:
                      - number
                      - 'null'
                    description: The XP the student has earned in the lesson
                  multiplier:
                    type:
                      - number
                      - 'null'
                    description: The multiplier for the student's XP
                required:
                  - lessonType
                  - finalized
                  - questions
                  - score
                  - accuracy
                  - correctQuestions
                  - totalQuestions
                  - xp
                  - multiplier
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /powerpath/getAssessmentProgress:
    get:
      operationId: getAssessmentProgress
      summary: Get assessment progress
      description: Returns the progress the student has made in the given PowerPath lesson
      tags:
        - PowerPath - Lesson Mastery
      parameters:
        - in: query
          name: student
          description: The sourcedId of the student who is answering the question
          schema:
            type: string
            description: The sourcedId of the student who is answering the question
          required: true
        - in: query
          name: lesson
          description: >-
            The sourcedId of the ComponentResource that represents the PowerPath
            lesson
          schema:
            type: string
            description: >-
              The sourcedId of the ComponentResource that represents the
              PowerPath lesson
          required: true
        - in: query
          name: attempt
          description: The attempt number of the lesson that the student is answering
          schema:
            type: number
            description: The attempt number of the lesson that the student is answering
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PowerPath100ProgressResult'
                  - $ref: '#/components/schemas/QuizProgressResult'
                discriminator:
                  propertyName: lessonType
                  mapping:
                    powerpath-100: '#/components/schemas/PowerPath100ProgressResult'
                    quiz: '#/components/schemas/QuizProgressResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /powerpath/getAttempts:
    get:
      operationId: getAttempts
      summary: Get all attempts
      description: Returns a list of all attempts for a student in a lesson
      tags:
        - PowerPath - Lesson Mastery
      parameters:
        - in: query
          name: student
          description: The sourcedId of the student
          schema:
            type: string
            description: The sourcedId of the student
          required: true
        - in: query
          name: lesson
          description: The sourcedId of the lesson
          schema:
            type: string
            description: The sourcedId of the lesson
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  attempts:
                    type: array
                    items:
                      type: object
                      properties:
                        attempt:
                          type:
                            - number
                            - 'null'
                          description: The attempt number
                        score:
                          type: number
                          description: The current score for this attempt
                        scoreStatus:
                          type: string
                          enum: *ref_2
                          description: The status of this attempt
                        startedAt:
                          type:
                            - string
                            - 'null'
                          format: date-time
                          description: When this attempt was started
                        completedAt:
                          type:
                            - string
                            - 'null'
                          format: date-time
                          description: When this attempt was completed
                      required:
                        - attempt
                        - score
                        - scoreStatus
                        - startedAt
                        - completedAt
                required:
                  - attempts
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /powerpath/getNextQuestion:
    get:
      operationId: getNextQuestion
      summary: Get next question
      description: Returns the next question in the given PowerPath lesson
      tags:
        - PowerPath - Lesson Mastery
      parameters:
        - in: query
          name: student
          description: The sourcedId of the student who is answering the question
          schema:
            type: string
            description: The sourcedId of the student who is answering the question
          required: true
        - in: query
          name: lesson
          description: >-
            The sourcedId of the ComponentResource that represents the PowerPath
            lesson
          schema:
            type: string
            description: >-
              The sourcedId of the ComponentResource that represents the
              PowerPath lesson
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  score:
                    type: number
                    description: The current PowerPath score of the student in this lesson
                  question:
                    $ref: '#/components/schemas/PowerPathTestQuestion'
                required:
                  - score
                  - question
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /powerpath/resetAttempt:
    post:
      operationId: resetAttempt
      summary: Reset attempt
      description: >-
        Resets the attempt for the given PowerPath lesson of a student, removing
        all previous responses and resetting the score to 0
      tags:
        - PowerPath - Lesson Mastery
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                student:
                  type: string
                  description: >-
                    The sourcedId of the student for who the attempt should be
                    reset
                lesson:
                  type: string
                  description: >-
                    The sourcedId of the ComponentResource that represents the
                    PowerPath lesson
              required:
                - student
                - lesson
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the reset was successful
                  score:
                    type: number
                    description: The reset score (always 0)
                required:
                  - success
                  - score
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /powerpath/updateStudentQuestionResponse:
    put:
      operationId: updateStudentQuestionResponse
      summary: Update student question response
      description: >

        Updates the student's response to a question and returns the updated
        PowerPath score.


        PowerPath will check the correctness of the response using the QTI
        question `<qti-response-declaration>` element and update the score
        accordingly.


        PowerPath will create/update the required AssessmentLineItem and
        AssessmentResult objects for the student/question pair if it doesn't
        exist yet.
      tags:
        - PowerPath - Lesson Mastery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudentQuestionResponseInput'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: >-
                      #/components/schemas/PowerPath100UpdateStudentQuestionResponseResult
                  - $ref: >-
                      #/components/schemas/QuizUpdateStudentQuestionResponseResult
                discriminator:
                  propertyName: lessonType
                  mapping:
                    powerpath-100: >-
                      #/components/schemas/PowerPath100UpdateStudentQuestionResponseResult
                    quiz: >-
                      #/components/schemas/QuizUpdateStudentQuestionResponseResult
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedRequestResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '422':
          description: Unprocessable Entity / Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          scopes:
            https://purl.imsglobal.org/spec/or/v1p1/scope/admin: Admin access to the API
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster-core.readonly: Read access to roster core
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster.readonly: Read access to roster
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster.createput: Create and update access to roster
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster.delete: Delete access to roster
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster-demographics.readonly: Read access to roster demographics
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster-demographics.createput: Create and update access to roster demographics
            https://purl.imsglobal.org/spec/or/v1p1/scope/roster-demographics.delete: Delete access to roster demographics
            https://purl.imsglobal.org/spec/or/v1p1/scope/resource.readonly: Read access to resource
            https://purl.imsglobal.org/spec/or/v1p1/scope/resource.createput: Create and update access to resource
            https://purl.imsglobal.org/spec/or/v1p1/scope/resource.delete: Delete access to resource
            https://purl.imsglobal.org/spec/or/v1p1/scope/gradebook.readonly: Read access to gradebook
            https://purl.imsglobal.org/spec/or/v1p1/scope/gradebook.createput: Create and update access to gradebook
            https://purl.imsglobal.org/spec/or/v1p1/scope/gradebook.delete: Delete access to gradebook
            https://purl.imsglobal.org/spec/powerpath/v1p1/scope/powerpath.readonly: Read access to powerpath
            https://purl.imsglobal.org/spec/powerpath/v1p1/scope/powerpath.createput: Create and update access to powerpath
            https://purl.imsglobal.org/spec/powerpath/v1p1/scope/powerpath.admin: Admin access to powerpath
          tokenUrl: >-
            https://alpha-auth-development-idp.auth.us-west-2.amazoncognito.com/oauth2/token
  schemas:
    BadRequestResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: invaliddata
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    UnauthorizedRequestResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: unauthorisedrequest
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    ForbiddenResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: forbidden
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    NotFoundResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: unknownobject
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    UnprocessableEntityResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: invaliddata
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    TooManyRequestsResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: server_busy
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    InternalServerErrorResponse:
      type: object
      properties:
        imsx_codeMajor:
          type: string
          const: failure
        imsx_severity:
          type: string
          const: error
        imsx_description:
          type: string
        imsx_CodeMinor:
          type: object
          properties:
            imsx_codeMinorField:
              type: array
              items:
                type: object
                properties:
                  imsx_codeMinorFieldName:
                    type: string
                    const: TargetEndSystem
                  imsx_codeMinorFieldValue:
                    type: string
                    const: internal_server_error
                required:
                  - imsx_codeMinorFieldName
                  - imsx_codeMinorFieldValue
          required:
            - imsx_codeMinorField
      required:
        - imsx_codeMajor
        - imsx_severity
        - imsx_description
        - imsx_CodeMinor
    AssessmentLineItem:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_0
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        title:
          type: string
        description:
          type:
            - string
            - 'null'
        class:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        parent:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
          description: Represents a parent assessment line item.
        scoreScale:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
          description: Represents a score scale.
        resultValueMin:
          type:
            - number
            - 'null'
        resultValueMax:
          type:
            - number
            - 'null'
        component:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
          description: >-
            Reference to the Component that this assessment line item is
            associated with.
        componentResource:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
          description: >-
            Reference to the Component Resource that this assessment line item
            is associated with.
        learningObjectiveSet:
          $ref: '#/components/schemas/LearningObjectiveSet'
      required:
        - status
        - title
      description: Represents an assessment line item.
    LearningObjectiveSet:
      type:
        - array
        - 'null'
      items:
        type: object
        properties:
          source:
            type: string
          learningObjectiveIds:
            type: array
            items:
              type: object
              properties:
                learningObjectiveId:
                  type: string
                score:
                  type: number
                textScore:
                  type: string
              required:
                - learningObjectiveId
        required:
          - source
          - learningObjectiveIds
      description: Represents a learning objective set.
    AssessmentResult:
      type: object
      properties:
        sourcedId:
          type: string
        status:
          type: string
          enum: *ref_0
        dateLastModified:
          type: string
          format: date-time
        metadata:
          type:
            - object
            - 'null'
          additionalProperties: {}
        assessmentLineItem:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        student:
          type: object
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        score:
          type:
            - number
            - 'null'
        textScore:
          type:
            - string
            - 'null'
        scoreDate:
          type: string
          format: date-time
        scoreScale:
          type:
            - object
            - 'null'
          properties:
            sourcedId:
              type: string
          required:
            - sourcedId
        scorePercentile:
          type:
            - number
            - 'null'
        scoreStatus:
          type: string
          enum: *ref_1
        comment:
          type:
            - string
            - 'null'
        learningObjectiveSet:
          type:
            - array
            - 'null'
          items:
            type: object
            properties:
              source:
                type: string
              learningObjectiveIds:
                type: array
                items:
                  type: object
                  properties:
                    learningObjectiveId:
                      type: string
                    score:
                      type: number
                    textScore:
                      type: string
                  required:
                    - learningObjectiveId
            required:
              - source
              - learningObjectiveIds
        inProgress:
          type:
            - string
            - 'null'
        incomplete:
          type:
            - string
            - 'null'
        late:
          type:
            - string
            - 'null'
        missing:
          type:
            - string
            - 'null'
      required:
        - status
        - assessmentLineItem
        - student
        - scoreDate
        - scoreStatus
      description: Represents an assessment result.
    PowerPathTestQuestion:
      type: object
      properties:
        id:
          type: string
          description: The ID that represents the question in the test
        index:
          type: number
          description: The index of the question in the test
        title:
          type: string
          description: The title of the question
        url:
          type: string
          format: uri
          description: The URL of the QTI question
        difficulty:
          type: string
          enum: &ref_3
            - easy
            - medium
            - hard
          default: medium
          description: The difficulty of the question
        content:
          type: object
          properties:
            type:
              type: string
              description: The type of the question
            rawXml:
              type: string
              description: The raw XML question in QTI format
          required:
            - rawXml
          description: The QTI content of the question
        response:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: The student's response to the question
        correct:
          type: boolean
          description: Whether the student's response is correct
        result:
          type: object
          properties:
            score:
              type: number
              description: >-
                The score assigned to the question, considering the student's
                response
            feedback:
              type: string
              description: The feedback for the question
          required:
            - score
            - feedback
          description: The result of the question
      required:
        - id
        - index
        - title
        - url
        - difficulty
      description: A PowerPath Test Question
    PowerPath100ProgressResult:
      type: object
      properties:
        lessonType:
          type: string
          const: powerpath-100
        remainingQuestionsPerDifficulty:
          type: object
          properties:
            easy:
              type: number
            medium:
              type: number
            hard:
              type: number
          required:
            - easy
            - medium
            - hard
        score:
          type: number
          description: The current score for this attempt
        seenQuestions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The ID that represents the question in the test
              index:
                type: number
                description: The index of the question in the test
              title:
                type: string
                description: The title of the question
              url:
                type: string
                format: uri
                description: The URL of the QTI question
              difficulty:
                type: string
                enum: *ref_3
                default: medium
                description: The difficulty of the question
              content:
                type: object
                properties:
                  type:
                    type: string
                    description: The type of the question
                  rawXml:
                    type: string
                    description: The raw XML question in QTI format
                required:
                  - rawXml
                description: The QTI content of the question
              response:
                anyOf:
                  - type: string
                  - type: array
                    items:
                      type: string
                description: The student's response to the question
              correct:
                type: boolean
                description: Whether the student's response to the question was correct
              result:
                type: object
                properties:
                  score:
                    type: number
                    description: >-
                      The score assigned to the question, considering the
                      student's response
                  feedback:
                    type: string
                    description: The feedback for the question
                required:
                  - score
                  - feedback
                description: The result of the question
            required:
              - id
              - index
              - title
              - url
              - difficulty
              - response
            description: A PowerPath Test Question
        xp:
          type:
            - number
            - 'null'
          description: The XP the student has earned in the lesson
        multiplier:
          type:
            - number
            - 'null'
          description: The multiplier for the student's XP
        accuracy:
          type: number
          description: The accuracy of the student's attempted questions
        correctQuestions:
          type: number
          description: >-
            The number of correct questions the student has answered in the
            lesson
        totalQuestions:
          type: number
          description: The total number of questions in the lesson
      required:
        - lessonType
        - remainingQuestionsPerDifficulty
        - score
        - seenQuestions
        - xp
        - multiplier
        - accuracy
        - correctQuestions
        - totalQuestions
      description: Represents the progress of the student in the PowerPath lesson
    QuizProgressResult:
      type: object
      properties:
        lessonType:
          type: string
          const: quiz
        finalized:
          type: boolean
          description: Whether the lesson has been finalized in the current attempt
        score:
          type: number
          description: The current score for this attempt
        questions:
          type: array
          items:
            $ref: '#/components/schemas/PowerPathTestQuestion'
        xp:
          type:
            - number
            - 'null'
          description: The XP the student has earned in the lesson
        multiplier:
          type:
            - number
            - 'null'
          description: The multiplier for the student's XP
        accuracy:
          type: number
          description: The accuracy of the student's attempted questions
        correctQuestions:
          type: number
          description: >-
            The number of correct questions the student has answered in the
            lesson
        totalQuestions:
          type: number
          description: The total number of questions in the lesson
      required:
        - lessonType
        - finalized
        - questions
        - xp
        - multiplier
        - accuracy
        - correctQuestions
        - totalQuestions
      description: Represents the progress of the student in the PowerPath Quiz lesson
    UpdateStudentQuestionResponseInput:
      type: object
      properties:
        student:
          type: string
          description: The sourcedId of the student who is answering the question
        question:
          type: string
          description: >-
            The sourcedId of the ComponentResource that represents the question
            within the course
        response:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: >-
            The student's response to the question. Might be the reference to
            the choice specified in the QTI structure.
        lesson:
          type: string
          description: >-
            The sourcedId of the ComponentResource that represents the PowerPath
            lesson
      required:
        - student
        - question
        - response
        - lesson
      description: The input for the updateStudentQuestionResponse endpoint
    PowerPath100UpdateStudentQuestionResponseResult:
      type: object
      properties:
        lessonType:
          type: string
          const: powerpath-100
        powerpathScore:
          type: number
          description: The updated PowerPath score of the student in this lesson
        responseResult:
          type: object
          properties:
            score:
              type: number
              description: The score for this specific response (0 or 1)
            feedback:
              description: Optional feedback for the student's response
          required:
            - score
          description: The result of processing the student's response
        questionResult:
          description: The assessment result object for the question (for debugging)
        testResult:
          description: The assessment result object for the test (for debugging)
        accuracy:
          type: number
          description: The accuracy of the student's attempted questions
        correctQuestions:
          type: number
          description: >-
            The number of correct questions the student has answered in the
            lesson
        totalQuestions:
          type: number
          description: The total number of questions in the lesson
        xp:
          type:
            - number
            - 'null'
          description: The XP the student has earned in the lesson
        multiplier:
          type:
            - number
            - 'null'
          description: The multiplier for the student's XP
      required:
        - lessonType
        - powerpathScore
        - responseResult
        - accuracy
        - correctQuestions
        - totalQuestions
        - xp
        - multiplier
      description: >-
        Represents the result of updating the student's response to the question
        in the PowerPath 100 lesson
    QuizUpdateStudentQuestionResponseResult:
      type: object
      properties:
        lessonType:
          type: string
          const: quiz
        questionResult:
          description: The assessment result object for the question (for debugging)
      required:
        - lessonType
      description: >-
        Represents the result of updating the student's response to the question
        in the PowerPath Quiz lesson
